{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasik\\\\Desktop\\\\photo management app\\\\photo-management-app\\\\src\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPage({\n  addPhoto\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file || !title || !description) {\n      alert('Please fill all fields');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('description', description);\n\n    // Simulate uploading to a server\n    const newPhoto = {\n      id: Date.now(),\n      file: URL.createObjectURL(file),\n      title,\n      description\n    };\n    const handleUpload = async () => {\n      if (!file || !title || !description) {\n        alert('Please fill all fields');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('title', title);\n      formData.append('description', description);\n      try {\n        const response = await fetch('http://localhost:5000/upload', {\n          method: 'POST',\n          body: formData\n        });\n        const newPhoto = await response.json();\n        addPhoto(newPhoto);\n        navigate('/gallery');\n      } catch (error) {\n        console.error('Error uploading photo:', error);\n      }\n    };\n    addPhoto(newPhoto);\n    navigate('/gallery');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload a Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"YDthm8z61kRCXiKfbVU3PJ8sgfE=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","UploadPage","addPhoto","_s","file","setFile","title","setTitle","description","setDescription","navigate","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","newPhoto","id","Date","now","URL","createObjectURL","response","fetch","method","body","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sasik/Desktop/photo management app/photo-management-app/src/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction UploadPage({ addPhoto }) {\r\n  const [file, setFile] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file || !title || !description) {\r\n      alert('Please fill all fields');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n\r\n    // Simulate uploading to a server\r\n    const newPhoto = {\r\n      id: Date.now(),\r\n      file: URL.createObjectURL(file),\r\n      title,\r\n      description,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n      if (!file || !title || !description) {\r\n        alert('Please fill all fields');\r\n        return;\r\n      }\r\n    \r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('title', title);\r\n      formData.append('description', description);\r\n    \r\n      try {\r\n        const response = await fetch('http://localhost:5000/upload', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n    \r\n        const newPhoto = await response.json();\r\n        addPhoto(newPhoto);\r\n        navigate('/gallery');\r\n      } catch (error) {\r\n        console.error('Error uploading photo:', error);\r\n      }\r\n    };\r\n    \r\n    addPhoto(newPhoto);\r\n    navigate('/gallery');\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-page\">\r\n      <h2>Upload a Photo</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}